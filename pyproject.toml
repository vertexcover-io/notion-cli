[project]
name = "notion-cli-ai"
version = "0.1.0"
description = "AI-powered CLI tool for Notion database operations using natural language"
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
authors = [
    {name = "Notion CLI AI", email = "hello@example.com"}
]
keywords = ["notion", "cli", "ai", "database", "productivity", "llm"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business",
    "Topic :: Database",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Environment :: Console",
]
dependencies = [
    "typer>=0.9.0",
    "notion-client>=2.2.1",
    "rich>=13.0.0",
    "pydantic>=2.5.0",
    "toml>=0.10.2",
    "platformdirs>=4.0.0",
    "litellm>=1.0.0",
    "python-dotenv>=1.0.0",
    "requests>=2.25.0",
    "pyperclip>=1.8.0",
    "questionary>=2.0.0",
    "md2notionpage>=0.1.5",
    "fastmcp>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pre-commit>=3.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pytest>=7.0.0",
]

[project.urls]
Homepage = "https://github.com/vertexcover-io/notion-cli-ai"
Repository = "https://github.com/vertexcover-io/notion-cli-ai"
Documentation = "https://github.com/vertexcover-io/notion-cli-ai#readme"
"Bug Tracker" = "https://github.com/vertexcover-io/notion-cli-ai/issues"

[project.scripts]
notion = "notion_cli.main:app"
notion-mcp = "notion_cli.mcp_server:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/notion_cli"]

[tool.ruff]
target-version = "py311"
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "COM", # flake8-commas (trailing commas)
]
ignore = [
    "B904",  # Within `except` clause, raise with `raise ... from err`
    "B008",  # Do not perform function call in argument defaults (typer uses this pattern)
    "COM812", # Trailing comma missing (conflicts with formatter)
    "COM819", # Trailing comma prohibited (conflicts with formatter)
    "E501",  # Line too long (let ruff format handle what it can)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
# More aggressive line breaking
line-ending = "auto"
skip-magic-trailing-comma = false

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
namespace_packages = true
explicit_package_bases = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[dependency-groups]
dev = [
    "mypy>=1.16.1",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "ruff>=0.12.3",
]
